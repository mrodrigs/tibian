{"version":3,"sources":["assets/images/background.png","pages/Home/styles.js","services/api.js","config/backend.js","services/worlds.js","pages/Home/index.js","routes/routes.js","styles/global.js","App.js","index.js"],"names":["module","exports","Wallpaper","require","Container","styled","div","CardContainer","api","axios","create","baseURL","headers","Accept","worldsApi","get","getEspecific","world","Option","Select","Title","Typography","Text","compare","a","b","levelA","level","levelB","comparison","Home","useState","worlds","setWorlds","name","vocations","selectedWorld","setSelectedWorld","selectedVocation","setSelectedVocation","setLevel","visible","setVisible","loading","setLoading","especificWorld","setEspecificWorld","playersOnline","setPlayersOnline","response","status","data","allworlds","console","log","players","players_online","minLevel","maxLevel","playersTable","map","player","voc","vocation","push","sort","useEffect","handleGetWorlds","style","display","flexDirection","alignItems","margin","title","onFinish","layout","width","Item","label","rules","required","message","allowClear","placeholder","marginBottom","onChange","w","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","suffixIcon","value","key","v","l","target","type","htmlType","bottom","marginTop","href","rel","world_information","onCancel","onOk","footer","onClick","dataSource","columns","dataIndex","rowKey","Routes","basename","window","location","pathname","path","exact","component","createGlobalStyle","App","WebFont","load","google","families","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1ffe3d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.35f57562.png\";","import styled from 'styled-components';\n\nconst Wallpaper = require('../../assets/images/background.png');\n\nexport const Container = styled.div`\n  background: url(${Wallpaper});\n  height: 100vh;\n  width: 100vw;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CardContainer = styled.div`\n  width: 30%;\n  background: #fff;\n  border-radius: 10px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 50px 20px;\n`;\n","import axios from 'axios';\n\nimport backend from '../config/backend';\n\nconst api = axios.create({\n  baseURL: backend.baseURL,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n});\n\n// api.interceptors.request.use(async config => {\n//   const token = localStorage.getItem('token');\n//   if (token) {\n//     config.headers.Authorization = `Bearer ${token}`;\n//   }\n//   return config;\n// });\n\nexport default api;\n","export default {\n  baseURL: 'https://api.tibiadata.com/v2',\n};\n","import api from './api';\n\nconst worldsApi = {\n  get: () => api.get('/worlds.json'),\n  getEspecific: world => api.get(`/world/${world}.json`),\n};\n\nexport default worldsApi;\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  Button,\n  Select,\n  Input,\n  Modal,\n  Table,\n  Form,\n  Typography,\n  Tooltip,\n} from 'antd';\nimport { GiWorld, GiBroadsword } from 'react-icons/gi';\nimport { MdHelp } from 'react-icons/md';\nimport { Container, CardContainer } from './styles';\n\nimport worldsApi from '../../services/worlds';\n\nconst { Option } = Select;\nconst { Title, Text } = Typography;\n\nfunction compare(a, b) {\n  const levelA = a.level;\n  const levelB = b.level;\n\n  let comparison = 0;\n  if (levelA > levelB) {\n    comparison = -1;\n  } else if (levelA < levelB) {\n    comparison = 1;\n  }\n  return comparison;\n}\n\nfunction Home() {\n  const [worlds, setWorlds] = useState([]);\n  const [vocations] = useState([\n    { name: 'Knight' },\n    { name: 'Paladin' },\n    { name: 'Druid' },\n    { name: 'Sorcerer' },\n  ]);\n  const [selectedWorld, setSelectedWorld] = useState(null);\n  const [selectedVocation, setSelectedVocation] = useState(null);\n  const [level, setLevel] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [especificWorld, setEspecificWorld] = useState(null);\n  const [playersOnline, setPlayersOnline] = useState([]);\n\n  const columns = [\n    {\n      title: 'Nome',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Vocação',\n      dataIndex: 'vocation',\n      key: 'vocation',\n    },\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n    },\n  ];\n\n  async function handleGetWorlds() {\n    try {\n      const response = await worldsApi.get();\n\n      if (response.status === 200) {\n        setWorlds(response.data.worlds.allworlds);\n      }\n    } catch (err) {\n      console.log(err.response.data);\n    }\n  }\n\n  async function handleGetPlayers() {\n    setLoading(true);\n    try {\n      const response = await worldsApi.getEspecific(selectedWorld);\n\n      if (response.status === 200) {\n        setLoading(false);\n        setEspecificWorld(response.data);\n\n        const players = response.data.world.players_online;\n        const minLevel = (level / 3) * 2;\n        const maxLevel = (level / 2) * 3;\n\n        const playersTable = [];\n        players.map(player => {\n          if (player.level >= minLevel && player.level <= maxLevel) {\n            const voc = player.vocation;\n\n            if (selectedVocation === 'Knight') {\n              if (voc === 'Knight' || voc === 'Elite Knight')\n                playersTable.push(player);\n            }\n            if (selectedVocation === 'Paladin') {\n              if (voc === 'Paladin' || voc === 'Royal Paladin')\n                playersTable.push(player);\n            }\n            if (selectedVocation === 'Druid') {\n              if (voc === 'Druid' || voc === 'Elder Druid')\n                playersTable.push(player);\n            }\n            if (selectedVocation === 'Sorcerer') {\n              if (voc === 'Sorcerer' || voc === 'Master Sorcerer')\n                playersTable.push(player);\n            }\n          }\n          return setPlayersOnline(playersTable.sort(compare));\n        });\n        setVisible(true);\n      }\n    } catch (e) {\n      setLoading(false);\n      console.log(e);\n    }\n  }\n\n  useEffect(() => {\n    handleGetWorlds();\n  }, []);\n\n  return (\n    <Container>\n      <CardContainer>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n        >\n          <Title level={4} style={{ margin: '0 5px 0 0' }}>\n            Tibian Finder\n          </Title>\n          <Tooltip title=\"Para encontrar os players que shareiam e podem completar sua PT.\">\n            <MdHelp />\n          </Tooltip>\n        </div>\n        <Form\n          onFinish={handleGetPlayers}\n          layout=\"vertical\"\n          style={{ display: 'flex', flexDirection: 'column', width: '100%' }}\n        >\n          <Form.Item\n            label=\"Mundo\"\n            name=\"world\"\n            rules={[\n              { required: true, message: 'Por favor, escolha um mundo.' },\n            ]}\n            style={{ width: '100%' }}\n          >\n            <Select\n              allowClear\n              placeholder=\"Mundo\"\n              style={{ width: '100%', marginBottom: 10 }}\n              onChange={w => setSelectedWorld(w)}\n              showSearch\n              optionFilterProp=\"children\"\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n              suffixIcon={<GiWorld />}\n            >\n              {worlds.map(world => (\n                <Option value={world.name} key={world.name}>\n                  {world.name}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Vocação\"\n            name=\"vocation\"\n            rules={[\n              { required: true, message: 'Por favor, escolha uma vocação.' },\n            ]}\n          >\n            <Select\n              allowClear\n              placeholder=\"Preciso de um...\"\n              style={{ width: '100%', marginBottom: 10 }}\n              onChange={v => setSelectedVocation(v)}\n              suffixIcon={<GiBroadsword />}\n            >\n              {vocations.map(vocation => (\n                <Option value={vocation.name} key={vocation.name}>\n                  {vocation.name}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Meu Level\"\n            name=\"level\"\n            rules={[\n              {\n                required: true,\n                message: 'Por favor, insira o nível do seu personagem.',\n              },\n            ]}\n          >\n            <Input\n              style={{ marginBottom: 10 }}\n              placeholder=\"Meu Level\"\n              onChange={l => setLevel(l.target.value)}\n            />\n          </Form.Item>\n          <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n            Encontrar\n          </Button>\n        </Form>\n        <Text style={{ bottom: 0, marginTop: 20 }}>\n          <a\n            href=\"https://www.tibia.com/community/?subtopic=characters&name=Desenvolvedor+Javascript\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Desenvolvedor Javascript - Kalibra\n          </a>\n        </Text>\n        {especificWorld !== null ? (\n          <Modal\n            title={especificWorld.world.world_information.name}\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            onOk={() => setVisible(false)}\n            footer={\n              <Button onClick={() => setVisible(false)} type=\"primary\">\n                Fechar\n              </Button>\n            }\n          >\n            <Table dataSource={playersOnline} columns={columns} rowKey=\"name\" />\n          </Modal>\n        ) : null}\n      </CardContainer>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter basename={window.location.pathname || ''}>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n    font-family: 'Nunito';\n  }\n\n  html, body, #root {\n    min-height: 100%;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased !important;\n  }\n`;\n","import React from 'react';\nimport Routes from './routes/routes';\n\nimport GlobalStyles from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WebFont from 'webfontloader';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nWebFont.load({\n  google: {\n    families: [\n      'Nunito Sans:300,400,600,700,800,900',\n      'Montserrat:300,400,600,700,800',\n      'Lato:300,400,600,700',\n      'Nunito:400,600,700,900',\n      'Ubuntu:400,600,700',\n    ],\n  },\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}